<mxfile host="65bd71144e">
    <diagram id="Rjx-U6bYDjUfQmDZbVuL" name="Page-1">
        <mxGraphModel dx="1099" dy="1265" grid="1" gridSize="10" guides="1" tooltips="1" connect="1" arrows="1" fold="1" page="1" pageScale="1" pageWidth="1169" pageHeight="1654" math="0" shadow="0">
            <root>
                <mxCell id="0"/>
                <mxCell id="1" parent="0"/>
                <mxCell id="5" value="" style="edgeStyle=none;html=1;entryX=0.5;entryY=0;entryDx=0;entryDy=0;" parent="1" source="2" target="15" edge="1">
                    <mxGeometry relative="1" as="geometry"/>
                </mxCell>
                <mxCell id="31" value="&lt;div style=&quot;color: rgb(212, 212, 212); background-color: rgb(30, 30, 30); font-family: Menlo, Monaco, &amp;quot;Courier New&amp;quot;, monospace; font-size: 12px; line-height: 18px;&quot;&gt;&lt;span style=&quot;color: #4fc1ff;&quot;&gt;schema&lt;/span&gt;&lt;/div&gt;" style="edgeLabel;html=1;align=center;verticalAlign=middle;resizable=0;points=[];fontSize=20;fontFamily=Architects Daughter;" vertex="1" connectable="0" parent="5">
                    <mxGeometry x="0.15" relative="1" as="geometry">
                        <mxPoint as="offset"/>
                    </mxGeometry>
                </mxCell>
                <mxCell id="2" value="&lt;span style=&quot;background-color: rgb(30, 30, 30); font-family: Menlo, Monaco, &amp;quot;Courier New&amp;quot;, monospace; font-size: 12px;&quot;&gt;&lt;font color=&quot;#009900&quot;&gt;Define graphQL access-points&lt;/font&gt;&lt;/span&gt;" style="rounded=0;whiteSpace=wrap;html=1;sketch=1;hachureGap=4;jiggle=2;curveFitting=1;fontFamily=Architects Daughter;fontSource=https%3A%2F%2Ffonts.googleapis.com%2Fcss%3Ffamily%3DArchitects%2BDaughter;fontSize=20;" parent="1" vertex="1">
                    <mxGeometry x="80" y="110" width="280" height="50" as="geometry"/>
                </mxCell>
                <mxCell id="3" value="Walkthrough" style="text;html=1;strokeColor=none;fillColor=none;align=left;verticalAlign=middle;whiteSpace=wrap;rounded=0;sketch=1;hachureGap=4;jiggle=2;curveFitting=1;fontFamily=Architects Daughter;fontSource=https%3A%2F%2Ffonts.googleapis.com%2Fcss%3Ffamily%3DArchitects%2BDaughter;fontSize=22;" parent="1" vertex="1">
                    <mxGeometry x="40" y="50" width="200" height="30" as="geometry"/>
                </mxCell>
                <mxCell id="9" value="" style="edgeStyle=none;html=1;fontFamily=Verdana;fontSize=9;fontColor=#FFFFFF;" parent="1" source="4" target="8" edge="1">
                    <mxGeometry relative="1" as="geometry"/>
                </mxCell>
                <mxCell id="33" value="&lt;div style=&quot;color: rgb(212, 212, 212); background-color: rgb(30, 30, 30); font-family: Menlo, Monaco, &amp;quot;Courier New&amp;quot;, monospace; font-size: 12px; line-height: 18px;&quot;&gt;&lt;span style=&quot;color: #4fc1ff;&quot;&gt;app&lt;/span&gt;&lt;/div&gt;" style="edgeLabel;html=1;align=center;verticalAlign=middle;resizable=0;points=[];fontSize=10;fontFamily=Verdana;fontColor=#009900;" vertex="1" connectable="0" parent="9">
                    <mxGeometry x="-0.175" y="3" relative="1" as="geometry">
                        <mxPoint as="offset"/>
                    </mxGeometry>
                </mxCell>
                <mxCell id="4" value="&lt;span style=&quot;background-color: rgb(30, 30, 30); font-family: Menlo, Monaco, &amp;quot;Courier New&amp;quot;, monospace;&quot;&gt;&lt;span style=&quot;font-size: 12px;&quot;&gt;&lt;font color=&quot;#009900&quot;&gt;Initialise http-server&lt;/font&gt;&lt;/span&gt;&lt;br&gt;&lt;font color=&quot;#ffffff&quot; style=&quot;font-size: 9px;&quot;&gt;(Express framework)&lt;/font&gt;&lt;br&gt;&lt;/span&gt;" style="rounded=0;whiteSpace=wrap;html=1;sketch=1;hachureGap=4;jiggle=2;curveFitting=1;fontFamily=Architects Daughter;fontSource=https%3A%2F%2Ffonts.googleapis.com%2Fcss%3Ffamily%3DArchitects%2BDaughter;fontSize=20;" parent="1" vertex="1">
                    <mxGeometry x="280" y="240" width="280" height="60" as="geometry"/>
                </mxCell>
                <mxCell id="6" value="&lt;div style=&quot;background-color: rgb(30, 30, 30); font-weight: normal; font-size: 8px; line-height: 100%;&quot;&gt;&lt;p style=&quot;line-height: 100%; font-size: 8px;&quot;&gt;&lt;font color=&quot;#ffffff&quot; style=&quot;font-size: 8px;&quot;&gt;&lt;font style=&quot;font-size: 8px;&quot; face=&quot;Verdana&quot;&gt;If all you need is a GraphQL endpoint, then using the standalone library (apollo-server) is generally preferred because&lt;br style=&quot;font-size: 8px;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;font-size: 8px;&quot; face=&quot;Verdana&quot;&gt;there will be less boilerplate to write (features like subscriptions, file uploads, etc. just work without additional configuration).&lt;br style=&quot;font-size: 8px;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;font-size: 8px;&quot; face=&quot;Verdana&quot;&gt;However, many applications require additional functionality beyond just exposing a single API endpoint.&lt;br style=&quot;font-size: 8px;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;font-size: 8px;&quot; face=&quot;Verdana&quot;&gt;Examples include: Webhooks, OAuth callbacks, Session management, Cookie parsing, CSRF protection, Monitoring or logging requests,&lt;br style=&quot;font-size: 8px;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;font-size: 8px;&quot; face=&quot;Verdana&quot;&gt;Rate limiting, Geofencing, Serving static content, Server-side rendering&lt;br style=&quot;font-size: 8px;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;font-size: 8px;&quot; face=&quot;Verdana&quot;&gt;If you need this sort of functionality for your application, then you'll want to utilize an HTTP framework like Express and then use the&lt;br style=&quot;font-size: 8px;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;font-size: 8px;&quot; face=&quot;Verdana&quot;&gt;appropriate integration library (i.e. apollo-server-express).&lt;/font&gt;&lt;/font&gt;&lt;/p&gt;&lt;/div&gt;" style="text;whiteSpace=wrap;html=1;spacing=4;verticalAlign=middle;labelPosition=center;verticalLabelPosition=middle;align=left;fontSize=8;" parent="1" vertex="1">
                    <mxGeometry x="630" y="230" width="530" height="80" as="geometry"/>
                </mxCell>
                <mxCell id="7" value="" style="endArrow=none;dashed=1;html=1;dashPattern=1 3;strokeWidth=2;fontFamily=Verdana;fontSize=8;fontColor=#FFFFFF;entryX=0;entryY=0.25;entryDx=0;entryDy=0;exitX=1;exitY=0.25;exitDx=0;exitDy=0;" parent="1" source="4" target="6" edge="1">
                    <mxGeometry width="50" height="50" relative="1" as="geometry">
                        <mxPoint x="510" y="250" as="sourcePoint"/>
                        <mxPoint x="560" y="200" as="targetPoint"/>
                    </mxGeometry>
                </mxCell>
                <mxCell id="8" value="&lt;span style=&quot;background-color: rgb(30, 30, 30); font-family: Menlo, Monaco, &amp;quot;Courier New&amp;quot;, monospace;&quot;&gt;&lt;span style=&quot;font-size: 12px;&quot;&gt;&lt;font color=&quot;#009900&quot;&gt;Apply middleware to http-server&lt;/font&gt;&lt;/span&gt;&lt;br&gt;&lt;font size=&quot;1&quot; color=&quot;#ffffff&quot;&gt;- graphqlUploadExpress&lt;/font&gt;&lt;br&gt;&lt;/span&gt;" style="rounded=0;whiteSpace=wrap;html=1;sketch=1;hachureGap=4;jiggle=2;curveFitting=1;fontFamily=Architects Daughter;fontSource=https%3A%2F%2Ffonts.googleapis.com%2Fcss%3Ffamily%3DArchitects%2BDaughter;fontSize=20;" parent="1" vertex="1">
                    <mxGeometry x="280" y="380" width="280" height="60" as="geometry"/>
                </mxCell>
                <mxCell id="10" value="&lt;div style=&quot;background-color: rgb(30, 30, 30); font-weight: normal; font-size: 8px; line-height: 100%;&quot;&gt;&lt;div style=&quot;font-size: 8px; line-height: 100%;&quot;&gt;&lt;span style=&quot;font-size: 8px;&quot;&gt;graphqlUploadExpress is express.js middleware. You must put it before the main GraphQL sever middleware.&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;font-size: 8px; line-height: 100%;&quot;&gt;&lt;span style=&quot;font-size: 8px;&quot;&gt;Also, make sure there is no other Express.js middleware which parses multipart/form-data HTTP requests before the graphqlUploadExpress middleware!&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;font-size: 8px;&quot;&gt;&lt;span style=&quot;font-size: 8px;&quot;&gt; &lt;/span&gt;&lt;/div&gt;&lt;/div&gt;" style="text;whiteSpace=wrap;html=1;fontSize=8;fontFamily=Verdana;fontColor=#FFFFFF;spacingTop=0;spacing=4;" parent="1" vertex="1">
                    <mxGeometry x="630" y="390" width="520" height="40" as="geometry"/>
                </mxCell>
                <mxCell id="11" value="" style="endArrow=none;dashed=1;html=1;dashPattern=1 3;strokeWidth=2;fontFamily=Verdana;fontSize=8;fontColor=#FFFFFF;entryX=0;entryY=0.5;entryDx=0;entryDy=0;exitX=1;exitY=0.5;exitDx=0;exitDy=0;" parent="1" source="8" target="10" edge="1">
                    <mxGeometry width="50" height="50" relative="1" as="geometry">
                        <mxPoint x="470" y="265" as="sourcePoint"/>
                        <mxPoint x="576.9000000000001" y="218" as="targetPoint"/>
                    </mxGeometry>
                </mxCell>
                <mxCell id="12" value="&lt;div style=&quot;background-color: rgb(30, 30, 30); font-weight: normal; font-size: 8px; line-height: 100%;&quot;&gt;&lt;div style=&quot;font-size: 8px; line-height: 100%;&quot;&gt;Our schema is defined by all the resolvers. They contain the actions we can do on our database by sending requests to our graphQL-API. The resolvers will access the Models in the database we define in our schema-files in the schema-folder.&lt;/div&gt;&lt;div style=&quot;font-size: 8px;&quot;&gt;&lt;span style=&quot;font-size: 8px;&quot;&gt; &lt;/span&gt;&lt;/div&gt;&lt;/div&gt;" style="text;whiteSpace=wrap;html=1;fontSize=8;fontFamily=Verdana;fontColor=#FFFFFF;spacing=4;" parent="1" vertex="1">
                    <mxGeometry x="440" y="120" width="560" height="30" as="geometry"/>
                </mxCell>
                <mxCell id="13" value="" style="endArrow=none;dashed=1;html=1;dashPattern=1 3;strokeWidth=2;fontFamily=Verdana;fontSize=8;fontColor=#FFFFFF;entryX=0;entryY=0.5;entryDx=0;entryDy=0;exitX=1;exitY=0.5;exitDx=0;exitDy=0;" parent="1" source="2" target="12" edge="1">
                    <mxGeometry width="50" height="50" relative="1" as="geometry">
                        <mxPoint x="330" y="420" as="sourcePoint"/>
                        <mxPoint x="410" y="410" as="targetPoint"/>
                    </mxGeometry>
                </mxCell>
                <mxCell id="15" value="&lt;span style=&quot;background-color: rgb(30, 30, 30); font-family: Menlo, Monaco, &amp;quot;Courier New&amp;quot;, monospace;&quot;&gt;&lt;span style=&quot;font-size: 12px;&quot;&gt;&lt;font color=&quot;#009900&quot;&gt;Create graphQL server&lt;/font&gt;&lt;/span&gt;&lt;br&gt;&lt;font size=&quot;1&quot; color=&quot;#ffffff&quot;&gt;- Apollo server&lt;/font&gt;&lt;br&gt;&lt;/span&gt;" style="rounded=0;whiteSpace=wrap;html=1;sketch=1;hachureGap=4;jiggle=2;curveFitting=1;fontFamily=Architects Daughter;fontSource=https%3A%2F%2Ffonts.googleapis.com%2Fcss%3Ffamily%3DArchitects%2BDaughter;fontSize=20;" parent="1" vertex="1">
                    <mxGeometry x="80" y="520" width="280" height="60" as="geometry"/>
                </mxCell>
                <mxCell id="17" value="&lt;p style=&quot;line-height: 100%;&quot;&gt;&lt;span style=&quot;font-size: 8px; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; font-weight: 300; letter-spacing: normal; orphans: 2; text-align: center; text-indent: 0px; text-transform: none; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; text-decoration-thickness: initial; text-decoration-style: initial; text-decoration-color: initial; float: none; display: inline !important;&quot;&gt;GraphQL is a query language for APIs and a runtime for fulfilling those queries with your existing data. GraphQL provides a complete and understandable description of the data in your API, gives clients the power to ask for exactly what they need and nothing more, makes it easier to evolve APIs over time, and enables powerful developer&amp;nbsp;tools.&lt;/span&gt;&lt;/p&gt;" style="text;whiteSpace=wrap;html=1;fontSize=8;fontFamily=Verdana;fontColor=#FFFFFF;spacing=4;" parent="1" vertex="1">
                    <mxGeometry x="640" y="510" width="520" height="50" as="geometry"/>
                </mxCell>
                <mxCell id="18" value="&lt;p style=&quot;&quot;&gt;&lt;span style=&quot;border-color: var(--chakra-colors-whiteAlpha-300); border-width: 0px; border-style: solid; box-sizing: border-box; overflow-wrap: break-word; font-weight: var(--chakra-fontWeights-strong); color: rgba(255, 255, 255, 0.92); background-color: rgb(27, 34, 64);&quot;&gt;Apollo Server is an&amp;nbsp;&lt;a style=&quot;color: var(--chakra-colors-primary); border-color: var(--chakra-colors-whiteAlpha-300); border-width: 0px; border-style: solid; box-sizing: border-box; overflow-wrap: break-word; background-color: transparent; text-decoration-line: none; transition-property: var(--chakra-transition-property-common); transition-duration: var(--chakra-transition-duration-fast); transition-timing-function: var(--chakra-transition-easing-ease-out); cursor: pointer; outline: transparent solid 2px; outline-offset: 2px;&quot; href=&quot;https://github.com/apollographql/apollo-server&quot; class=&quot;chakra-link css-7i8qdf&quot; target=&quot;_blank&quot;&gt;open-source&lt;/a&gt;, spec-compliant GraphQL server&lt;/span&gt;&lt;span style=&quot;color: rgba(255, 255, 255, 0.92); background-color: rgb(27, 34, 64);&quot;&gt;&amp;nbsp;that's compatible with any GraphQL client&lt;/span&gt;&lt;br&gt;&lt;/p&gt;" style="text;html=1;align=left;verticalAlign=middle;resizable=0;points=[];autosize=1;strokeColor=none;fillColor=none;fontSize=8;fontFamily=Verdana;fontColor=#FFFFFF;labelBackgroundColor=none;spacing=4;" parent="1" vertex="1">
                    <mxGeometry x="640" y="560" width="460" height="40" as="geometry"/>
                </mxCell>
                <mxCell id="26" value="&lt;div style=&quot;color: rgb(212, 212, 212); background-color: rgb(30, 30, 30); font-family: Menlo, Monaco, &amp;quot;Courier New&amp;quot;, monospace; font-size: 12px; line-height: 18px;&quot;&gt;&lt;span style=&quot;color: #4fc1ff;&quot;&gt;server&lt;/span&gt;&lt;/div&gt;" style="edgeStyle=none;html=1;fontFamily=Verdana;fontSize=8;fontColor=#FFFFFF;" parent="1" source="19" target="25" edge="1">
                    <mxGeometry relative="1" as="geometry"/>
                </mxCell>
                <mxCell id="19" value="&lt;span style=&quot;background-color: rgb(30, 30, 30); font-family: Menlo, Monaco, &amp;quot;Courier New&amp;quot;, monospace;&quot;&gt;&lt;span style=&quot;font-size: 12px;&quot;&gt;&lt;font color=&quot;#009900&quot;&gt;Apply middleware to graphQL-server&lt;/font&gt;&lt;/span&gt;&lt;br&gt;&lt;font size=&quot;1&quot; color=&quot;#ffffff&quot;&gt;- the http-server&lt;/font&gt;&lt;br&gt;&lt;/span&gt;" style="rounded=0;whiteSpace=wrap;html=1;sketch=1;hachureGap=4;jiggle=2;curveFitting=1;fontFamily=Architects Daughter;fontSource=https%3A%2F%2Ffonts.googleapis.com%2Fcss%3Ffamily%3DArchitects%2BDaughter;fontSize=20;" parent="1" vertex="1">
                    <mxGeometry x="280" y="659" width="280" height="60" as="geometry"/>
                </mxCell>
                <mxCell id="20" value="" style="endArrow=none;dashed=1;html=1;dashPattern=1 3;strokeWidth=2;fontFamily=Verdana;fontSize=8;fontColor=#FFFFFF;entryX=0;entryY=0.5;entryDx=0;entryDy=0;exitX=1;exitY=0.5;exitDx=0;exitDy=0;" parent="1" source="19" target="22" edge="1">
                    <mxGeometry width="50" height="50" relative="1" as="geometry">
                        <mxPoint x="280" y="545" as="sourcePoint"/>
                        <mxPoint x="400" y="690" as="targetPoint"/>
                    </mxGeometry>
                </mxCell>
                <mxCell id="22" value="&lt;div style=&quot;background-color: rgb(30, 30, 30); font-weight: normal; font-size: 8px; line-height: 100%;&quot;&gt;&lt;div style=&quot;line-height: 100%;&quot;&gt;&lt;div style=&quot;line-height: 100%;&quot;&gt;&lt;p style=&quot;line-height: 100%;&quot;&gt;applyMiddleware applies Apollo Server as middleware to the HTTP framework of a Node.js middleware library, such as hapi or express.&lt;/p&gt;&lt;p style=&quot;line-height: 100%;&quot;&gt;You call this method instead of listen if you're using a middleware integration, such as apollo-server-express. You should call await server.start() before calling this method.&lt;/p&gt;&lt;p style=&quot;line-height: 100%;&quot;&gt;What applyMiddleware actually does is only add middleware to the path (default /graphql router), so it’s not applied to the whole app&lt;/p&gt;&lt;div style=&quot;font-family: Menlo, Monaco, &amp;quot;Courier New&amp;quot;, monospace; color: rgb(212, 212, 212);&quot;&gt;  &lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div style=&quot;font-size: 8px;&quot;&gt;&lt;span style=&quot;font-size: 8px;&quot;&gt; &lt;/span&gt;&lt;/div&gt;&lt;/div&gt;" style="text;whiteSpace=wrap;html=1;fontSize=8;fontFamily=Verdana;fontColor=#FFFFFF;spacingTop=0;spacing=4;" parent="1" vertex="1">
                    <mxGeometry x="640" y="655" width="520" height="70" as="geometry"/>
                </mxCell>
                <mxCell id="23" value="" style="endArrow=none;dashed=1;html=1;dashPattern=1 3;strokeWidth=2;fontFamily=Verdana;fontSize=8;fontColor=#FFFFFF;entryX=-0.004;entryY=0.525;entryDx=0;entryDy=0;entryPerimeter=0;exitX=1.007;exitY=0.633;exitDx=0;exitDy=0;exitPerimeter=0;" parent="1" source="15" target="18" edge="1">
                    <mxGeometry width="50" height="50" relative="1" as="geometry">
                        <mxPoint x="360" y="570" as="sourcePoint"/>
                        <mxPoint x="440" y="570" as="targetPoint"/>
                    </mxGeometry>
                </mxCell>
                <mxCell id="24" value="" style="endArrow=none;dashed=1;html=1;dashPattern=1 3;strokeWidth=2;fontFamily=Verdana;fontSize=8;fontColor=#FFFFFF;entryX=0;entryY=0.5;entryDx=0;entryDy=0;exitX=1;exitY=0.25;exitDx=0;exitDy=0;" parent="1" source="15" target="17" edge="1">
                    <mxGeometry width="50" height="50" relative="1" as="geometry">
                        <mxPoint x="371.96000000000004" y="567.98" as="sourcePoint"/>
                        <mxPoint x="448.1600000000001" y="591" as="targetPoint"/>
                    </mxGeometry>
                </mxCell>
                <mxCell id="25" value="&lt;span style=&quot;background-color: rgb(30, 30, 30); font-family: Menlo, Monaco, &amp;quot;Courier New&amp;quot;, monospace;&quot;&gt;&lt;span style=&quot;font-size: 12px;&quot;&gt;&lt;font color=&quot;#009900&quot;&gt;Start http-server&lt;/font&gt;&lt;/span&gt;&lt;br&gt;&lt;/span&gt;" style="rounded=0;whiteSpace=wrap;html=1;sketch=1;hachureGap=4;jiggle=2;curveFitting=1;fontFamily=Architects Daughter;fontSource=https%3A%2F%2Ffonts.googleapis.com%2Fcss%3Ffamily%3DArchitects%2BDaughter;fontSize=20;labelBackgroundColor=none;fontColor=#FFFFFF;" parent="1" vertex="1">
                    <mxGeometry x="280" y="796" width="280" height="60" as="geometry"/>
                </mxCell>
                <mxCell id="27" value="&lt;span style=&quot;background-color: rgb(30, 30, 30); font-family: Menlo, Monaco, &amp;quot;Courier New&amp;quot;, monospace;&quot;&gt;&lt;span style=&quot;font-size: 12px;&quot;&gt;&lt;font color=&quot;#009900&quot;&gt;Connect to database&lt;/font&gt;&lt;/span&gt;&lt;br&gt;&lt;/span&gt;" style="rounded=0;whiteSpace=wrap;html=1;sketch=1;hachureGap=4;jiggle=2;curveFitting=1;fontFamily=Architects Daughter;fontSource=https%3A%2F%2Ffonts.googleapis.com%2Fcss%3Ffamily%3DArchitects%2BDaughter;fontSize=20;labelBackgroundColor=none;fontColor=#FFFFFF;" parent="1" vertex="1">
                    <mxGeometry x="280" y="936" width="280" height="60" as="geometry"/>
                </mxCell>
                <mxCell id="29" value="&lt;div style=&quot;background-color: rgb(30, 30, 30); font-size: 8px; line-height: 18px;&quot;&gt;&lt;div style=&quot;font-size: 8px;&quot;&gt;&lt;span style=&quot;font-size: 8px;&quot;&gt;When server has started we can connect to the database we need&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;font-size: 8px;&quot;&gt;&lt;span style=&quot;font-size: 8px;&quot;&gt;   &lt;/span&gt;&lt;/div&gt;&lt;/div&gt;" style="text;html=1;align=left;verticalAlign=middle;resizable=0;points=[];autosize=1;strokeColor=none;fillColor=none;fontSize=8;fontFamily=Verdana;fontColor=#FFFFFF;labelBackgroundColor=none;spacing=4;" parent="1" vertex="1">
                    <mxGeometry x="640" y="948.01" width="290" height="40" as="geometry"/>
                </mxCell>
                <mxCell id="30" value="" style="endArrow=none;dashed=1;html=1;dashPattern=1 3;strokeWidth=2;fontFamily=Verdana;fontSize=8;fontColor=#FFFFFF;entryX=-0.004;entryY=0.525;entryDx=0;entryDy=0;entryPerimeter=0;exitX=1;exitY=0.5;exitDx=0;exitDy=0;" parent="1" source="27" target="29" edge="1">
                    <mxGeometry width="50" height="50" relative="1" as="geometry">
                        <mxPoint x="361.96000000000004" y="945.99" as="sourcePoint"/>
                        <mxPoint x="440" y="958.01" as="targetPoint"/>
                    </mxGeometry>
                </mxCell>
                <mxCell id="34" value="" style="edgeStyle=orthogonalEdgeStyle;html=1;fontFamily=Verdana;fontSize=9;fontColor=#FFFFFF;exitX=0.5;exitY=1;exitDx=0;exitDy=0;" edge="1" parent="1" source="8" target="19">
                    <mxGeometry relative="1" as="geometry">
                        <mxPoint x="430" y="520" as="sourcePoint"/>
                        <mxPoint x="430" y="600" as="targetPoint"/>
                        <Array as="points"/>
                    </mxGeometry>
                </mxCell>
                <mxCell id="35" value="&lt;div style=&quot;color: rgb(212, 212, 212); background-color: rgb(30, 30, 30); font-family: Menlo, Monaco, &amp;quot;Courier New&amp;quot;, monospace; font-size: 12px; line-height: 18px;&quot;&gt;&lt;span style=&quot;color: #4fc1ff;&quot;&gt;app&lt;/span&gt;&lt;/div&gt;" style="edgeLabel;html=1;align=center;verticalAlign=middle;resizable=0;points=[];fontSize=10;fontFamily=Verdana;fontColor=#009900;" vertex="1" connectable="0" parent="34">
                    <mxGeometry x="-0.175" y="3" relative="1" as="geometry">
                        <mxPoint as="offset"/>
                    </mxGeometry>
                </mxCell>
                <mxCell id="37" value="&lt;div style=&quot;color: rgb(212, 212, 212); background-color: rgb(30, 30, 30); font-family: Menlo, Monaco, &amp;quot;Courier New&amp;quot;, monospace; font-size: 12px; line-height: 18px;&quot;&gt;&lt;span style=&quot;color: #4fc1ff;&quot;&gt;server&lt;/span&gt;&lt;/div&gt;" style="edgeStyle=orthogonalEdgeStyle;html=1;fontFamily=Verdana;fontSize=8;fontColor=#FFFFFF;exitX=0.475;exitY=1.033;exitDx=0;exitDy=0;exitPerimeter=0;entryX=0;entryY=0.5;entryDx=0;entryDy=0;" edge="1" parent="1" source="15" target="19">
                    <mxGeometry relative="1" as="geometry">
                        <mxPoint x="430" y="729" as="sourcePoint"/>
                        <mxPoint x="430" y="806" as="targetPoint"/>
                    </mxGeometry>
                </mxCell>
            </root>
        </mxGraphModel>
    </diagram>
</mxfile>